{"version":3,"sources":["utils/sleep.js","pokemon.reducer.js","PokeContext.js","Loading/index.js","PokeDisplay.js","PokeForm.js","App.js","index.js"],"names":["sleep","ms","Promise","resolve","setTimeout","_getPokemon","a","name","send","showLoading","hideLoading","updateStore","pokeName","toLowerCase","trim","axios","get","data","pokemon","warning","actions","searchPokemon","state","image","sprites","front_shiny","loading","onli","pokeReducer","types","PokeStateContext","React","createContext","PokeDispatchContext","PokeProvider","children","useReducer","dispatch","onliSend","Provider","value","usePokeState","context","useContext","undefined","Error","usePokeDispatch","Loading","id","PokeDisplay","toUpperCase","src","alt","PokeForm","useState","setName","handleSubmit","event","preventDefault","onSubmit","type","onChange","target","placeholder","App","ReactDOM","render","document","getElementById"],"mappings":"+TAKeA,EALD,SAAAC,GAAE,OACd,IAAIC,QAAQ,SAAAC,GACVC,WAAW,kBAAMD,KAAWF,M,mjBCIhC,IAwBMI,EAAW,sCAAG,2CAAAC,EAAA,4DAASC,EAAT,EAASA,KAAMC,EAAf,EAAeA,KACzBC,EAA0CD,EAA1CC,YAAaC,EAA6BF,EAA7BE,YAAaC,EAAgBH,EAAhBG,YAC5BC,EAAWL,EAAKM,cAAcC,OAEpCL,IAJkB,SAOZT,EAAM,KAPM,gCAUOe,IAAMC,IAAN,UAlCf,sCAkCe,OAAmBJ,IAV1B,gBAURK,EAVQ,EAURA,KACRN,EAAY,CAAEO,QAASD,IACvBP,IAZgB,kDAchBC,EAAY,CAAEQ,QAAS,gCACvBT,IAfgB,wDAAH,sDAmBXU,EAAU,CACdC,cAzCoB,SAACC,EAAD,GAA4B,IAAlBf,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KAEpC,OADAH,EAAY,CAAEE,OAAMC,SACbc,GAwCPX,YArCkB,SAACW,EAAD,GAAkC,IAAxBJ,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QACrC,OACS,EAAP,GACKG,EAFHJ,EACF,CAEEA,QAAS,CAAEX,KAAMW,EAAQX,KAAMgB,MAAOL,EAAQM,QAAQC,aACtDN,QAAS,IAIb,CAAmBA,aA6BnBV,YA1BkB,SAAAa,GAAK,YAAUA,EAAV,CAAiBI,SAAS,KA2BjDhB,YA1BkB,SAAAY,GAAK,YAAUA,EAAV,CAAiBI,SAAS,M,EA6BtBC,YAAKP,G,mBAA3BQ,E,KAAaC,E,KCnDdC,EAAmBC,IAAMC,gBACzBC,EAAsBF,IAAMC,gBAE5BE,EAAe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACXJ,IAAMK,WAAWR,EAAa,CACtDV,QAAS,CAAEX,KAAM,GAAIgB,MAAO,IAC5BJ,QAAS,GACTO,SAAS,IAJ0B,mBAC9BJ,EAD8B,KACvBe,EADuB,KAM/B7B,EAAO8B,YAASD,EAAUR,GAEhC,OACE,kBAACC,EAAiBS,SAAlB,CAA2BC,MAAOlB,GAChC,kBAACW,EAAoBM,SAArB,CAA8BC,MAAOhC,GAClC2B,KAMHM,EAAe,WACnB,IAAMC,EAAUX,IAAMY,WAAWb,GAEjC,QAAgBc,IAAZF,EACF,MAAM,IAAIG,MAAM,mDAElB,OAAOH,GAGHI,EAAkB,WACtB,IAAMJ,EAAUX,IAAMY,WAAWV,GAEjC,QAAgBW,IAAZF,EACF,MAAM,IAAIG,MAAM,sDAElB,OAAOH,GClCMK,G,MAFC,kBAAM,yBAAKC,GAAG,cCkBfC,EAjBK,WAAO,IAAD,EACcR,IAA9BvB,EADgB,EAChBA,QAASC,EADO,EACPA,QAASO,EADF,EACEA,QAE1B,OACE,oCACGA,GAAW,kBAAC,EAAD,MAEZ,oDACA,+DAAkCR,EAAQX,KAAK2C,eAE/C,yBAAKC,IAAKjC,EAAQK,MAAO6B,IAAKlC,EAAQX,OAErCY,GAAW,2BAAIA,KCSPkC,EAtBE,WAAO,IAAD,EACGC,mBAAS,IADZ,mBACd/C,EADc,KACRgD,EADQ,KAEblC,EAAkByB,IAAlBzB,cAEFmC,EAAe,SAAAC,GACnBA,EAAMC,iBACNnD,GAAQc,EAAc,CAAEd,UAG1B,OACE,0BAAMoD,SAAUH,GACd,2BACEI,KAAK,OACLC,SAVc,SAAAJ,GAAK,OAAIF,EAAQE,EAAMK,OAAOtB,QAW5CA,MAAOjC,EACPwD,YAAY,gCAEd,2BAAOH,KAAK,SAASpB,MAAM,SAASmB,SAAUH,MCRrCQ,EAPH,kBACV,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,MCHJC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.a446e568.chunk.js","sourcesContent":["const sleep = ms =>\n  new Promise(resolve => {\n    setTimeout(() => resolve(), ms)\n  })\n\nexport default sleep\n","import onli from \"onli-reducer\"\nimport axios from \"axios\"\n\nimport sleep from \"./utils/sleep\"\n\n// Constants\nconst URL = \"https://pokeapi.co/api/v2/pokemon/\"\n\n// Public/Sync Actions\nconst searchPokemon = (state, { name, send }) => {\n  _getPokemon({ name, send })\n  return state\n}\n\nconst updateStore = (state, { pokemon, warning }) => {\n  if (pokemon) {\n    return {\n      ...state,\n      pokemon: { name: pokemon.name, image: pokemon.sprites.front_shiny },\n      warning: \"\"\n    }\n  }\n\n  return { ...state, warning }\n}\n\nconst showLoading = state => ({ ...state, loading: true })\nconst hideLoading = state => ({ ...state, loading: false })\n\n// Private/Async Actions\nconst _getPokemon = async ({ name, send }) => {\n  const { showLoading, hideLoading, updateStore } = send\n  const pokeName = name.toLowerCase().trim()\n\n  showLoading()\n\n  // increase latency to show it's an async call\n  await sleep(1000)\n\n  try {\n    const { data } = await axios.get(`${URL}${pokeName}`)\n    updateStore({ pokemon: data })\n    hideLoading()\n  } catch (error) {\n    updateStore({ warning: \"Ops... Pokémon not found\" })\n    hideLoading()\n  }\n}\n\nconst actions = {\n  searchPokemon,\n  updateStore,\n  showLoading,\n  hideLoading\n}\n\nconst [pokeReducer, types] = onli(actions)\n\nexport { pokeReducer, types }\n","import React from \"react\"\nimport { onliSend } from \"onli-reducer\"\n\nimport { pokeReducer, types } from \"./pokemon.reducer\"\n\nconst PokeStateContext = React.createContext()\nconst PokeDispatchContext = React.createContext()\n\nconst PokeProvider = ({ children }) => {\n  const [state, dispatch] = React.useReducer(pokeReducer, {\n    pokemon: { name: \"\", image: \"\" },\n    warning: \"\",\n    loading: false\n  })\n  const send = onliSend(dispatch, types)\n\n  return (\n    <PokeStateContext.Provider value={state}>\n      <PokeDispatchContext.Provider value={send}>\n        {children}\n      </PokeDispatchContext.Provider>\n    </PokeStateContext.Provider>\n  )\n}\n\nconst usePokeState = () => {\n  const context = React.useContext(PokeStateContext)\n\n  if (context === undefined)\n    throw new Error(\"usePokeState must be used within a PokeProvider\")\n\n  return context\n}\n\nconst usePokeDispatch = () => {\n  const context = React.useContext(PokeDispatchContext)\n\n  if (context === undefined)\n    throw new Error(\"usePokeDispatch must be used within a PokeProvider\")\n\n  return context\n}\n\nconst useCount = () => [usePokeState(), usePokeDispatch()]\n\nexport { PokeProvider, usePokeState, usePokeDispatch, useCount }\n","import React from \"react\"\n\nimport \"./index.css\"\n\nconst Loading = () => <div id='loading' />\n\nexport default Loading\n","import React from \"react\"\n\nimport { usePokeState } from \"./PokeContext\"\nimport Loading from \"./Loading\"\n\nconst PokeDisplay = () => {\n  const { pokemon, warning, loading } = usePokeState()\n\n  return (\n    <>\n      {loading && <Loading />}\n\n      <h1>onli-reducer example</h1>\n      <h2>The current shiny Pokémon is {pokemon.name.toUpperCase()}</h2>\n\n      <img src={pokemon.image} alt={pokemon.name} />\n\n      {warning && <p>{warning}</p>}\n    </>\n  )\n}\n\nexport default PokeDisplay\n","import React, { useState } from \"react\"\n\nimport { usePokeDispatch } from \"./PokeContext\"\n\nconst PokeForm = () => {\n  const [name, setName] = useState(\"\")\n  const { searchPokemon } = usePokeDispatch()\n  const handleInput = event => setName(event.target.value)\n  const handleSubmit = event => {\n    event.preventDefault()\n    name && searchPokemon({ name })\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type='text'\n        onChange={handleInput}\n        value={name}\n        placeholder='Insert pokemon name here...'\n      />\n      <input type='submit' value='Search' onSubmit={handleSubmit} />\n    </form>\n  )\n}\n\nexport default PokeForm\n","import React from \"react\"\n\nimport { PokeProvider } from \"./PokeContext\"\nimport PokeDisplay from \"./PokeDisplay\"\nimport PokeForm from \"./PokeForm\"\n\nconst App = () => (\n  <PokeProvider>\n    <PokeDisplay />\n    <PokeForm />\n  </PokeProvider>\n)\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\n\nimport \"./index.css\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}